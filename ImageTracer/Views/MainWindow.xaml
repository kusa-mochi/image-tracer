<Window x:Name="window" x:Class="ImageTracer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ImageTracer.Views"
        xmlns:vm="clr-namespace:ImageTracer.ViewModels"
        ResizeMode="CanResizeWithGrip"
        Title=""
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        Width="{Binding Width, Mode=TwoWay, FallbackValue=640}"
        Height="{Binding Height, Mode=TwoWay, FallbackValue=480}"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        SourceInitialized="window_SourceInitialized"
        Loaded="window_Loaded" PreviewKeyDown="window_PreviewKeyDown">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="20"
                      UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>

    <Window.DataContext>
        <vm:MainWindowViewModel x:Name="_vm"/>
    </Window.DataContext>

    <Window.Resources>
        <ContextMenu x:Key="MainContextMenu">
            <MenuItem x:Name="FileOpenMenuItem" Header="画像を開く(_O)" Click="FileOpenMenuItem_Click"/>
            <MenuItem Header="設定(_E)" Command="{Binding ShowSettingDialogCommand}"/>
            <MenuItem x:Name="CloseMenuItem" Header="閉じる(_X)" Command="{Binding CloseCommand, Mode=OneWay}"/>
        </ContextMenu>
    </Window.Resources>

    <i:Interaction.Triggers>

        <l:InteractionMessageTrigger
            MessageKey="ShowSettingDialogCommand" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction
                WindowType="{x:Type v:SettingDialog}" Mode="Normal"/>
        </l:InteractionMessageTrigger>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid Width="Auto" Height="Auto">
        <Image
            x:Name="_image"
            Source="/ImageTracer;component/Resources/dummy.png"
            Opacity="{Binding Alpha, FallbackValue=0.5}"
            ContextMenu="{StaticResource MainContextMenu}"
            Stretch="Fill"
            OpacityMask="{Binding Opacity}"/>
    </Grid>
</Window>
